{"version":3,"sources":["webpack:///js/sdk.2d3322596a14e26719d8.js","webpack:///./~/babel-runtime/core-js/json/stringify.js?4574","webpack:///./~/core-js/library/fn/json/stringify.js?6708","webpack:///./~/core-js/library/modules/_core.js?1b62","webpack:///./src/sdk/assets/hd.sdk.js"],"names":["webpackJsonp","1","module","exports","__webpack_require__","default","__esModule","2","core","$JSON","JSON","stringify","it","apply","arguments","3","version","__e","5","__webpack_exports__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","n","window","undefined","isFunction","fun","getDeviceUUID","device_uuid","guid","replace","c","r","Math","random","toString","covertToNumber","num","max","_num","parseInt","indexOf","isNaN","HdSmart","apiLog","apiName","params","result","Device","control","method","command","attr","onSuccess","onFailure","dataOptions","req_id","cmd","HdIot","data","onListener","getDeviceLog","start_time","items_per_page","direction","parse","getDeviceLogByDay","getDeviceMonthHistory","year","month","getSnapShot","timestamp","UI","alert","title","message","okText","cancelText","toast","delay","showLoading","hideLoading","setWebViewTouchRect","left","top","right","bottom","rect","document","body","getBoundingClientRect","width","height","setTouchRect","Util","getNetworkType","reload","post","url","sendNotification","toggleHeadAndFoot","isShow","show_head_foot","is_ready","readyCallbacks","deviceChangeCallbacks","ready","callback","push","onDeviceListen","onDeviceChange","length","i","onDeviceJsReady","Error","func","pop","66"],"mappings":"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","file":"js/sdk.2d3322596a14e26719d8.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 1:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(2), __esModule: true };\n\n/***/ }),\n\n/***/ 2:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar core  = __webpack_require__(3)\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\nvar core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ }),\n\n/***/ 5:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n\n(function (window, undefined) {\n    if (window.HdSmart) {\n        return false;\n    }\n    function isFunction(fun) {\n        return typeof fun === 'function';\n    }\n\n    function noop() {}\n\n    function getDeviceUUID() {\n        return window.device_uuid;\n    }\n\n    if (!window.apiLog) {\n        window.apiLog = function (apiName, params, result) {};\n    }\n\n    function guid() {\n        var guid = 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 10 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n        guid = guid.replace(/^0/, '1');\n        return guid;\n    }\n\n    var HdSmart = {};\n\n    HdSmart.Device = {};\n\n    HdSmart.Device.control = function (method, command, attr, onSuccess, onFailure) {\n        var dataOptions = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n            method: method,\n            req_id: guid(),\n            params: {\n                device_uuid: getDeviceUUID(),\n                cmd: command,\n                attr: attr\n            }\n        });\n        HdIot.Device.control({\n            data: dataOptions,\n            onListener: function onListener(data) {\n                window.apiLog('control', dataOptions, data);\n                onSuccess(data);\n            }\n        });\n    };\n\n    HdSmart.Device.getDeviceLog = function (data, onSuccess) {\n        var dataOptions = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n            method: 'getDeviceLog',\n            req_id: guid(),\n            params: {\n                device_uuid: getDeviceUUID(),\n                start_time: data.start_time,\n                items_per_page: typeof data.items_per_page === 'number' ? data.items_per_page : 8,\n                direction: data.direction\n            }\n        });\n        HdIot.Device.getDeviceLog({\n            data: dataOptions,\n            onListener: function onListener(data) {\n                window.apiLog('getDeviceLog', dataOptions, data);\n                data = JSON.parse(data);\n                if (isFunction(onSuccess)) {\n                    onSuccess(data.result);\n                }\n            }\n        });\n    };\n\n    HdSmart.Device.getDeviceLogByDay = function (start_time, onSuccess) {\n        var dataOptions = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n            method: 'getDeviceLogByDay',\n            req_id: guid(),\n            params: {\n                start_time: start_time,\n                device_uuid: getDeviceUUID()\n            }\n        });\n        HdIot.Device.getDeviceLogByDay({\n            data: dataOptions,\n            onListener: function onListener(data) {\n                data = JSON.parse(data);\n                window.apiLog('getDeviceLogByDay', dataOptions, data);\n                if (isFunction(onSuccess)) {\n                    onSuccess(data);\n                }\n            }\n        });\n    };\n\n    HdSmart.Device.getDeviceMonthHistory = function (year, month, onSuccess) {\n        var dataOptions = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n            method: 'getDeviceMonthHistory',\n            req_id: guid(),\n            params: {\n                device_uuid: getDeviceUUID(),\n                year: year,\n                month: month\n            }\n        });\n        HdIot.Device.getDeviceMonthHistory({\n            data: dataOptions,\n            onListener: function onListener(data) {\n                window.apiLog('getDeviceMonthHistory', dataOptions, data);\n                data = JSON.parse(data);\n                if (isFunction(onSuccess)) {\n                    onSuccess(data);\n                }\n            }\n        });\n    };\n\n    HdSmart.Device.getSnapShot = function (onSuccess, onFailure) {\n        HdIot.Device.getSnapShot({\n            data: '',\n            onListener: function onListener(data) {\n                window.apiLog('getSnapShot', '', data);\n                data = JSON.parse(data);\n                if (data.result) {\n                    onSuccess(data.result, data.timestamp || data.result.timestamp);\n                } else {\n                    onFailure(data);\n                }\n            }\n        });\n    };\n\n    HdSmart.UI = {};\n\n    HdSmart.UI.alert = function (title, message, onSuccess, okText, cancelText) {\n        okText = okText || '确定';\n        cancelText = cancelText || '取消';\n        HdIot.UI.alert({\n            data: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n                title: title,\n                message: message,\n                okText: okText,\n                cancelText: cancelText\n            }),\n            onListener: function onListener() {\n                onSuccess();\n            }\n        });\n    };\n\n    HdSmart.UI.toast = function (message, delay) {\n        delay = delay || 3000;\n        HdIot.UI.toast(message, delay);\n    };\n\n    HdSmart.UI.showLoading = function () {\n        HdIot.UI.showLoading({\n            data: ''\n        });\n    };\n\n    HdSmart.UI.hideLoading = function () {\n        HdIot.UI.hideLoading({\n            data: ''\n        });\n    };\n\n    function covertToNumber(num, max) {\n        if (typeof num == 'number') {\n            return num;\n        } else if (typeof num == 'string') {\n            var _num = parseInt(num);\n            if (num.indexOf('%') > -1) {\n                return max * _num / 100;\n            } else if (!isNaN(_num)) {\n                return _num;\n            }\n        }\n        return 0;\n    };\n\n    HdSmart.UI.setWebViewTouchRect = function (left, top, right, bottom) {\n        var rect = document.body.getBoundingClientRect();\n        left = covertToNumber(left, rect.width);\n        top = covertToNumber(top, rect.height);\n        right = covertToNumber(right, rect.width);\n        bottom = covertToNumber(bottom, rect.height);\n\n        var dataOptions = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n            left: left,\n            right: right,\n            top: top,\n            bottom: bottom\n        });\n        HdIot.UI.setTouchRect({\n            data: dataOptions\n        });\n        window.apiLog('setWebViewTouchRect', dataOptions, '');\n    };\n\n    HdSmart.Util = {};\n\n    HdSmart.Util.getNetworkType = function (onSuccess) {\n        HdIot.Util.getNetworkType({\n            data: '',\n            onListener: function onListener(data) {\n                window.apiLog('getNetworkType', '', data);\n                onSuccess(data);\n            }\n        });\n    };\n\n    HdSmart.Util.reload = function () {\n        HdIot.Util.reload();\n    };\n\n    HdSmart.Util.post = function (url, data, onSuccess, onFailure) {\n        HdIot.Util.post({\n            data: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n                url: url,\n                data: data\n            }),\n            onListener: function onListener(data) {\n                onSuccess(data);\n            }\n        });\n    };\n\n    HdSmart.Util.sendNotification = function (title, message) {\n        HdIot.Util.sendNotification({\n            data: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n                title: title,\n                message: message\n            })\n        });\n    };\n\n    HdSmart.UI.toggleHeadAndFoot = function (isShow) {\n        HdIot.UI.toggleHeadAndFoot({\n            data: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n                show_head_foot: isShow\n            })\n        });\n    };\n\n    var is_ready = false;\n    var readyCallbacks = [];\n    var deviceChangeCallbacks = [];\n    window.HdSmart = {\n        ready: function ready(callback) {\n            if (is_ready) {\n                callback();\n            } else {\n                readyCallbacks.push(callback);\n            }\n        },\n        onDeviceListen: function onDeviceListen(callback) {\n            deviceChangeCallbacks.push(callback);\n        }\n    };\n\n    window.onDeviceChange = function (data) {\n        window.apiLog('onDeviceListen', '', data);\n        var length = deviceChangeCallbacks.length;\n        for (var i = 0; i < length; i++) {\n            if (isFunction(deviceChangeCallbacks[i])) {\n                deviceChangeCallbacks[i](data);\n            }\n        }\n    };\n\n    window.onDeviceJsReady = function () {\n        if (!window.HdIot) {\n            throw new Error(\"当前环境没有可用的api\");\n        }\n        if (!is_ready) {\n            HdSmart.ready = window.HdSmart.ready;\n            HdSmart.onDeviceListen = window.HdSmart.onDeviceListen;\n            window.HdSmart = HdSmart;\n            is_ready = true;\n        }\n        while (readyCallbacks.length) {\n            var func = readyCallbacks.pop();\n            if (isFunction(func)) {\n                func();\n            }\n        }\n    };\n})(window);\n\n/***/ }),\n\n/***/ 66:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(5);\n\n\n/***/ })\n\n},[66]);\n\n\n// WEBPACK FOOTER //\n// js/sdk.2d3322596a14e26719d8.js","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/json/stringify.js\n// module id = 1\n// module chunks = 0 1","var core  = require('../../modules/_core')\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/json/stringify.js\n// module id = 2\n// module chunks = 0 1","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_core.js\n// module id = 3\n// module chunks = 0 1","(function (window, undefined) {\n    if (window.HdSmart) {\n        return false;\n    }\n    function isFunction(fun) {\n        return typeof fun === 'function'\n    }\n\n    function noop() {\n\n    }\n\n    function getDeviceUUID() {\n        return window.device_uuid;\n    }\n\n    if (!window.apiLog) {\n        window.apiLog = function (apiName, params, result) {\n        };\n    }\n\n    function guid() {\n        var guid = 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 10 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n        guid = guid.replace(/^0/, '1');\n        return guid;\n    }\n\n    var HdSmart = {};\n\n\n    HdSmart.Device = {};\n\n    /**\n     * @method HdSmart.Device.control\n     * @param method\n     * @param command\n     * @param attr\n     * @param onSuccess\n     * @param onFailure\n     */\n    HdSmart.Device.control = function (method, command, attr, onSuccess, onFailure) {\n        var dataOptions = JSON.stringify({\n            method: method,\n            req_id: guid(),\n            params: {\n                device_uuid: getDeviceUUID(),\n                cmd: command,\n                attr: attr\n            }\n        });\n        HdIot.Device.control({\n            data: dataOptions,\n            onListener: function (data) {\n                window.apiLog('control', dataOptions, data);\n                onSuccess(data)\n            }\n        });\n    };\n\n    /**\n     * @method HdSmart.Device.getDeviceLog\n     * @param data\n     * @param data.start_time required\n     * @param data.items_per_page optional\n     * @param data.direction required\n     * @param onSuccess\n     */\n\n    HdSmart.Device.getDeviceLog = function (data, onSuccess) {\n        var dataOptions = JSON.stringify({\n            method: 'getDeviceLog',\n            req_id: guid(),\n            params: {\n                device_uuid: getDeviceUUID(),\n                start_time: data.start_time,\n                items_per_page: typeof data.items_per_page === 'number' ? data.items_per_page : 8,\n                direction: data.direction\n            }\n        });\n        HdIot.Device.getDeviceLog({\n            data: dataOptions,\n            onListener: function (data) {\n                window.apiLog('getDeviceLog', dataOptions, data)\n                data = JSON.parse(data);\n                if (isFunction(onSuccess)) {\n                    onSuccess(data.result)\n                }\n            }\n        });\n    };\n\n    HdSmart.Device.getDeviceLogByDay = function (start_time, onSuccess) {\n        var dataOptions = JSON.stringify({\n            method: 'getDeviceLogByDay',\n            req_id: guid(),\n            params: {\n                start_time: start_time,\n                device_uuid: getDeviceUUID()\n            }\n        });\n        HdIot.Device.getDeviceLogByDay({\n            data: dataOptions,\n            onListener: function (data) {\n                data = JSON.parse(data);\n                window.apiLog('getDeviceLogByDay', dataOptions, data);\n                if (isFunction(onSuccess)) {\n                    onSuccess(data)\n                }\n            }\n        })\n    };\n\n\n    HdSmart.Device.getDeviceMonthHistory = function (year, month, onSuccess) {\n        var dataOptions = JSON.stringify({\n            method: 'getDeviceMonthHistory',\n            req_id: guid(),\n            params: {\n                device_uuid: getDeviceUUID(),\n                year: year,\n                month: month,\n                // start_time: parseInt(new Date(year, month - 1) / 1000)\n            }\n        })\n        HdIot.Device.getDeviceMonthHistory({\n            data: dataOptions,\n            onListener: function (data) {\n                window.apiLog('getDeviceMonthHistory', dataOptions, data);\n                data = JSON.parse(data);\n                if (isFunction(onSuccess)) {\n                    onSuccess(data);\n                }\n            }\n        })\n    };\n\n    /**\n     * @method HdSmart.Device.getSnapShot\n     * @param onSuccess\n     * @param onFailure\n     */\n    HdSmart.Device.getSnapShot = function (onSuccess, onFailure) {\n        HdIot.Device.getSnapShot({\n            data: '',\n            onListener: function (data) {\n                window.apiLog('getSnapShot', '', data);\n                data = JSON.parse(data);\n                if (data.result) {\n                    onSuccess(data.result, data.timestamp || data.result.timestamp);\n                } else {\n                    onFailure(data);\n                }\n            }\n        });\n    };\n\n    HdSmart.UI = {};\n    /**\n     * @method HdSmart.UI.alert\n     * @param title\n     * @param message\n     * @param onSuccess\n     * @param okText\n     * @param cancelText\n     */\n    HdSmart.UI.alert = function (title, message, onSuccess, okText, cancelText) {\n        okText = okText || '确定';\n        cancelText = cancelText || '取消';\n        HdIot.UI.alert({\n            data: JSON.stringify({\n                title: title,\n                message: message,\n                okText: okText,\n                cancelText: cancelText\n            }),\n            onListener: function () {\n                onSuccess()\n            }\n        });\n    };\n\n    /**\n     * @method HdSmart.UI.toast\n     * @param message\n     * @param delay\n     */\n    HdSmart.UI.toast = function (message, delay) {\n        delay = delay || 3000;\n        HdIot.UI.toast(message, delay);\n    };\n    /**\n     * @method HdSmart.UI.showLoading\n     */\n    HdSmart.UI.showLoading = function () {\n        HdIot.UI.showLoading({\n            data: ''\n        });\n    };\n\n    /**\n     * @method HdSmart.UI.hideLoading\n     */\n    HdSmart.UI.hideLoading = function () {\n        HdIot.UI.hideLoading({\n            data: ''\n        });\n    };\n\n    function covertToNumber(num, max) {\n        if (typeof num == 'number') {\n            return num;\n        } else if (typeof num == 'string') {\n            let _num = parseInt(num);\n            if (num.indexOf('%') > -1) {\n                return max * _num / 100;\n            } else if (!isNaN(_num)) {\n                return _num;\n            }\n        }\n        return 0\n    };\n\n    HdSmart.UI.setWebViewTouchRect = function (left, top, right, bottom) {\n        var rect = document.body.getBoundingClientRect();\n        left = covertToNumber(left, rect.width);\n        top = covertToNumber(top, rect.height);\n        right = covertToNumber(right, rect.width);\n        bottom = covertToNumber(bottom, rect.height);\n\n        let dataOptions = JSON.stringify({\n            left: left,\n            right: right,\n            top: top,\n            bottom: bottom\n        });\n        HdIot.UI.setTouchRect({\n            data: dataOptions\n        });\n        window.apiLog('setWebViewTouchRect', dataOptions, '')\n    };\n\n    HdSmart.Util = {};\n\n    /**\n     * @method HdSmart.Util.getNetworkType\n     * @param onSuccess\n     */\n    HdSmart.Util.getNetworkType = function (onSuccess) {\n        HdIot.Util.getNetworkType({\n            data: '',\n            onListener (data){\n                window.apiLog('getNetworkType', '', data);\n                onSuccess(data);\n            }\n        });\n    };\n\n    /**\n     * @method HdSmart.Util.reload\n     */\n    HdSmart.Util.reload = function () {\n        HdIot.Util.reload();\n    };\n\n    /**\n     * @method HdSmart.Util.post\n     * @param url\n     * @param data\n     * @param onSuccess\n     * @param onFailure\n     */\n    HdSmart.Util.post = function (url, data, onSuccess, onFailure) {\n        HdIot.Util.post({\n            data: JSON.stringify({\n                url: url,\n                data: data\n            }),\n            onListener: function (data) {\n                onSuccess(data)\n            }\n        })\n    };\n\n    HdSmart.Util.sendNotification = function (title, message) {\n        HdIot.Util.sendNotification({\n            data: JSON.stringify({\n                title: title,\n                message: message\n            })\n        });\n    };\n\n    /**\n     * @method HdSmart.UI.toggleHeadAndFoot\n     * @param isShow { Boolean }\n     */\n    HdSmart.UI.toggleHeadAndFoot = function (isShow) {\n        HdIot.UI.toggleHeadAndFoot({\n            data: JSON.stringify({\n                show_head_foot: isShow\n            })\n        });\n    }\n    /**\n     * 设备控制页加载资源完成后调用\n     * @method HdSmart.ready\n     * @type {Window.onDeviceJsReady}\n     */\n    var is_ready = false;\n    var readyCallbacks = [];\n    var deviceChangeCallbacks = [];\n    window.HdSmart = {\n        ready: function (callback) {\n            if (is_ready) {\n                callback();\n            } else {\n                readyCallbacks.push(callback);\n            }\n        },\n        onDeviceListen: function (callback) {\n            deviceChangeCallbacks.push(callback);\n        }\n    };\n\n    window.onDeviceChange = function (data) {\n        window.apiLog('onDeviceListen', '', data);\n        var length = deviceChangeCallbacks.length;\n        for (var i = 0; i < length; i++) {\n            if (isFunction(deviceChangeCallbacks[i])) {\n                deviceChangeCallbacks[i](data);\n            }\n        }\n    };\n\n    window.onDeviceJsReady = function () {\n        if (!window.HdIot) {\n            throw new Error(\"当前环境没有可用的api\")\n        }\n        if (!is_ready) {\n            HdSmart.ready = window.HdSmart.ready;\n            HdSmart.onDeviceListen = window.HdSmart.onDeviceListen;\n            window.HdSmart = HdSmart;\n            is_ready = true;\n        }\n        while (readyCallbacks.length) {\n            var func = readyCallbacks.pop();\n            if (isFunction(func)) {\n                func();\n            }\n        }\n    };\n})(window);\n\n\n\n// WEBPACK FOOTER //\n// ./src/sdk/assets/hd.sdk.js"],"sourceRoot":""}