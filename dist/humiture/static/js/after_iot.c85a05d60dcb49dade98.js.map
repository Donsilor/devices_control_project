{"version":3,"sources":["webpack:///static/js/after_iot.c85a05d60dcb49dade98.js","webpack:///./src/__global_iot_proxy/hd.iot.humiture.mock.js","webpack:///./src/__global_iot_proxy/hd.iot.sdk.js","webpack:///./src/__global_iot_proxy/hd.iot.humiture.js"],"names":["webpackJsonp","40","module","__webpack_exports__","__webpack_require__","generateSnapShot","__WEBPACK_IMPORTED_MODULE_0_mockjs___default","a","mock","method","result","device_uuid","window","timestamp","Date","attr","temperature|-2000-6000","humidity|0-10000","generateDeviceLogByDay","time","mockOptions","log|24","time|+3600000","num|+1","__WEBPACK_IMPORTED_MODULE_0_mockjs__","n","41","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","location","search","indexOf","HdIot","Device","control","options","onListener","data","getSnapShot","code","getDeviceLog","getDeviceMonthHistory","getDeviceLogByDay","UI","alert","toast","showLoading","hideLoading","setTouchRect","toggleHeadAndFoot","Util","getNetworkType","onSuccess","reload","post","sendNotification","deviceReadyTimer","setTimeout","onDeviceJsReady","HdSmart","ready","console","log","50","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_1__hd_iot_humiture_mock__","JSON","parse","params","start_time"],"mappings":"AAAAA,cAAc,IAERC,GACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCHO,SAASC,KACZ,MAAOC,GAAAC,EAAKC,MACRC,OAAQ,SACRC,QACIC,YAAaC,OAAOD,YACpBE,WAAY,GAAIC,MAChBC,MACIC,yBAA0B,EAC1BC,mBAAoB,MAK7B,QAASC,GAAuBC,GACnCA,GAAc,KACd,IAAIC,IACAX,OAAU,SACVC,QACIC,YAAeC,OAAOD,YACtBU,WACIC,gBAAiBH,EACjBI,SAAU,EACVR,MACIC,yBAA0B,EAC1BC,mBAAoB,MAKpC,OAAOX,GAAAC,EAAKC,KAAKY,GDzBA,GAAII,GAAuCpB,EAAoB,IAC3DE,EAA+CF,EAAoBqB,EAAED,EAC7DrB,GAAuB,EAAIE,EAC3BF,EAAuB,EAAIe,GAqCtDQ,GACA,SAAUxB,EAAQC,EAAqBC,GAE7C,YACqB,IAAIuB,GAAqEvB,EAAoB,IACzFwB,EAA6ExB,EAAoBqB,EAAEE,IEnD7E,GAA3CE,SAASC,OAAOC,QAAQ,iBACxBnB,OAAOoB,OACHC,QACIC,QAAS,SAAUC,GACfA,EAAQC,WAAWD,EAAQE,OAE/BC,YAAa,SAAUH,GACnBA,EAAQC,WAAWR,KACfW,KAAM,IACN7B,QACI4B,YAAe,YAI3BE,aAAc,SAAUL,GACpBA,EAAQC,WAAWD,EAAQE,OAE/BI,sBAAuB,SAAUN,GAC7BA,EAAQC,WAAWD,EAAQE,OAE/BK,kBAAmB,SAAUP,GACzBA,EAAQC,WAAWD,EAAQE,QAGnCM,IACIC,MAAO,SAAUT,GACbA,EAAQC,cAEZS,MAAO,aAGPC,YAAa,aAGbC,YAAa,aAGbC,aAAc,SAAUb,KAExBc,kBAAmB,cAIvBC,MACIC,eAAgB,SAAUC,GACtBA,EAAU,SAEdC,OAAQ,aAGRC,KAAM,SAAUnB,GACZA,EAAQC,WAAWD,EAAQE,OAE/BkB,iBAAkB,SAAUpB,OAKpCvB,OAAOD,YAAc,SACrBC,OAAO4C,iBAAmBC,WAAW,WACjC7C,OAAO8C,mBACR,MAGH9C,OAAO+C,SACPA,QAAQC,MAAM,WACVC,QAAQC,IAAI,cAAelD,OAAOD,gBF8CpCoD,GACA,SAAU7D,EAAQC,EAAqBC,GAE7C,YACA4D,QAAOC,eAAe9D,EAAqB,cAAgB+D,OAAO,GAC7C,IAAIvC,GAAqEvB,EAAoB,IACzFwB,EAA6ExB,EAAoBqB,EAAEE,GACnGwC,EAAsD/D,EAAoB,GAC9BA,GAAoB,GGrHrFQ,QAAOoB,QAAoD,GAA3CH,SAASC,OAAOC,QAAQ,iBACxCC,MAAMC,OAAOK,YAAc,SAAUH,GACjCsB,WAAW,WACPtB,EAAQC,WAAWR,IAAeuC,EAAA,OACpC,MAENnC,MAAMC,OAAOS,kBAAoB,SAAUP,GACzC,GAAIE,GAAO+B,KAAKC,MAAMlC,EAAQE,KAE9BoB,YAAW,WACLtB,EAAQC,WAAWR,IAAeuC,EAAA,EAAgC9B,EAAKiC,OAAOC,eAChF,UHgIP","file":"static/js/after_iot.c85a05d60dcb49dade98.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 40:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_mockjs__ = __webpack_require__(92);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_mockjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_mockjs__);\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = generateSnapShot;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = generateDeviceLogByDay;\n\n\nfunction generateSnapShot() {\n    return __WEBPACK_IMPORTED_MODULE_0_mockjs___default.a.mock({\n        method: 'report',\n        result: {\n            device_uuid: window.device_uuid,\n            timestamp: +new Date(),\n            attr: {\n                'temperature|-2000-6000': 1,\n                'humidity|0-10000': 1\n            }\n        }\n    });\n}\nfunction generateDeviceLogByDay(time) {\n    time = time - 23 * 60 * 60 * 1000;\n    var mockOptions = {\n        \"method\": \"report\",\n        \"result\": {\n            \"device_uuid\": window.device_uuid,\n            \"log|24\": [{\n                \"time|+3600000\": time,\n                \"num|+1\": 0,\n                attr: {\n                    \"temperature|-2000-6000\": 1,\n                    \"humidity|0-10000\": 1\n                }\n            }]\n        }\n    };\n    return __WEBPACK_IMPORTED_MODULE_0_mockjs___default.a.mock(mockOptions);\n}\n\n/***/ }),\n\n/***/ 41:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n\nif (location.search.indexOf('env=desktop') != -1) {\n    window.HdIot = {\n        Device: {\n            control: function control(options) {\n                options.onListener(options.data);\n            },\n            getSnapShot: function getSnapShot(options) {\n                options.onListener(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n                    code: 200,\n                    result: {\n                        'getSnapShot': 'test'\n                    }\n                }));\n            },\n            getDeviceLog: function getDeviceLog(options) {\n                options.onListener(options.data);\n            },\n            getDeviceMonthHistory: function getDeviceMonthHistory(options) {\n                options.onListener(options.data);\n            },\n            getDeviceLogByDay: function getDeviceLogByDay(options) {\n                options.onListener(options.data);\n            }\n        },\n        UI: {\n            alert: function alert(options) {\n                options.onListener();\n            },\n            toast: function toast() {},\n            showLoading: function showLoading() {},\n            hideLoading: function hideLoading() {},\n            setTouchRect: function setTouchRect(options) {},\n            toggleHeadAndFoot: function toggleHeadAndFoot() {}\n        },\n        Util: {\n            getNetworkType: function getNetworkType(onSuccess) {\n                onSuccess('wifi');\n            },\n            reload: function reload() {},\n            post: function post(options) {\n                options.onListener(options.data);\n            },\n            sendNotification: function sendNotification(options) {}\n        }\n    };\n    window.device_uuid = 'abc123';\n    window.deviceReadyTimer = setTimeout(function () {\n        window.onDeviceJsReady();\n    }, 500);\n}\n\nif (window.HdSmart) {\n    HdSmart.ready(function () {\n        console.log('device_uuid', window.device_uuid);\n    });\n}\n\n/***/ }),\n\n/***/ 50:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__hd_iot_humiture_mock__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__hd_iot_sdk__ = __webpack_require__(41);\n\n\n\n\nif (window.HdIot && location.search.indexOf('env=desktop') != -1) {\n    HdIot.Device.getSnapShot = function (options) {\n        setTimeout(function () {\n            options.onListener(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(__WEBPACK_IMPORTED_MODULE_1__hd_iot_humiture_mock__[\"a\" /* generateSnapShot */]()));\n        }, 100);\n    };\n    HdIot.Device.getDeviceLogByDay = function (options) {\n        var data = JSON.parse(options.data);\n\n        setTimeout(function () {\n            options.onListener(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(__WEBPACK_IMPORTED_MODULE_1__hd_iot_humiture_mock__[\"b\" /* generateDeviceLogByDay */](data.params.start_time)));\n        }, 100);\n    };\n}\n\n/***/ })\n\n},[50]);\n\n\n// WEBPACK FOOTER //\n// static/js/after_iot.c85a05d60dcb49dade98.js","import Mock from 'mockjs';\n\nexport function generateSnapShot() {\n    return Mock.mock({\n        method: 'report',\n        result: {\n            device_uuid: window.device_uuid,\n            timestamp: +new Date(),\n            attr: {\n                'temperature|-2000-6000': 1,\n                'humidity|0-10000': 1\n            }\n        }\n    })\n}\nexport function generateDeviceLogByDay(time) {\n    time = time - 23 * 60 * 60 * 1000;\n    let mockOptions = {\n        \"method\": \"report\",\n        \"result\": {\n            \"device_uuid\": window.device_uuid,\n            \"log|24\": [{\n                \"time|+3600000\": time,\n                \"num|+1\": 0,\n                attr: {\n                    \"temperature|-2000-6000\": 1,\n                    \"humidity|0-10000\": 1\n                }\n            }]\n        }\n    };\n    return Mock.mock(mockOptions);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/__global_iot_proxy/hd.iot.humiture.mock.js","if (location.search.indexOf('env=desktop') != -1) {\n    window.HdIot = {\n        Device: {\n            control: function (options) {\n                options.onListener(options.data)\n            },\n            getSnapShot: function (options) {\n                options.onListener(JSON.stringify({\n                    code: 200,\n                    result: {\n                        'getSnapShot': 'test'\n                    }\n                }))\n            },\n            getDeviceLog: function (options) {\n                options.onListener(options.data);\n            },\n            getDeviceMonthHistory: function (options) {\n                options.onListener(options.data);\n            },\n            getDeviceLogByDay: function (options) {\n                options.onListener(options.data)\n            }\n        },\n        UI: {\n            alert: function (options) {\n                options.onListener();\n            },\n            toast: function () {\n\n            },\n            showLoading: function () {\n\n            },\n            hideLoading: function () {\n\n            },\n            setTouchRect: function (options) {\n            },\n            toggleHeadAndFoot: function () {\n\n            }\n        },\n        Util: {\n            getNetworkType: function (onSuccess) {\n                onSuccess('wifi')\n            },\n            reload: function () {\n\n            },\n            post: function (options) {\n                options.onListener(options.data)\n            },\n            sendNotification: function (options) {\n\n            }\n        }\n    };\n    window.device_uuid = 'abc123';\n    window.deviceReadyTimer = setTimeout(function () {\n        window.onDeviceJsReady();\n    }, 500)\n}\n\nif (window.HdSmart) {\n    HdSmart.ready(function () {\n        console.log('device_uuid', window.device_uuid);\n    })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/__global_iot_proxy/hd.iot.sdk.js","import * as mockData from './hd.iot.humiture.mock';\n\nimport './hd.iot.sdk';\nif (window.HdIot && location.search.indexOf('env=desktop') != -1) {\n    HdIot.Device.getSnapShot = function (options) {\n        setTimeout(()=>{\n            options.onListener(JSON.stringify(mockData.generateSnapShot()))\n        },100)\n    }\n    HdIot.Device.getDeviceLogByDay = function (options) {\n      let data = JSON.parse(options.data);\n\n      setTimeout(()=>{\n            options.onListener(JSON.stringify(mockData.generateDeviceLogByDay(data.params.start_time)))\n        },100)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/__global_iot_proxy/hd.iot.humiture.js"],"sourceRoot":""}