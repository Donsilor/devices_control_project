{"version":3,"sources":["webpack:///static/js/app.43fbd8fc311998483f8c.js","webpack:///./src/sdk/assets/hd.sdk.js"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","n","window","undefined","isFunction","fun","getDeviceUUID","device_uuid","guid","replace","c","r","Math","random","toString","HdSmart","Device","control","method","command","attr","onSuccess","onFailure","HdIot","data","req_id","params","cmd","onListener","getDeviceLog","start_time","items_per_page","direction","JSON","parse","result","getDeviceMonthHistory","date","parseInt","console","log","getSnapShot","timestamp","UI","alert","title","message","okText","cancelText","toast","delay","showLoading","hideLoading","Util","getNetworkType","reload","post","url","sendNotification","is_ready","readyCallbacks","deviceChangeCallbacks","ready","callback","push","onDeviceListen","onDeviceChange","length","i","onDeviceJsReady","Error","func","pop","exports"],"mappings":"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","file":"static/js/app.43fbd8fc311998483f8c.js","sourcesContent":["webpackJsonp([1],[\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n\n(function (window, undefined) {\n    if (window.HdSmart) {\n        return false;\n    }\n    function isFunction(fun) {\n        return typeof fun === 'function';\n    }\n\n    function noop() {}\n\n    function getDeviceUUID() {\n        return window.device_uuid;\n    }\n\n    function guid() {\n        var guid = 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 10 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n        guid = guid.replace(/^0/, '1');\n        return guid;\n    }\n\n    var HdSmart = {};\n\n    HdSmart.Device = {};\n\n    HdSmart.Device.control = function (method, command, attr, onSuccess, onFailure) {\n        HdIot.Device.control({\n            data: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n                method: method,\n                req_id: guid(),\n                params: {\n                    device_uuid: getDeviceUUID(),\n                    cmd: command,\n                    attr: attr\n                }\n            }),\n            onListener: function onListener(data) {\n                onSuccess(data);\n            }\n        });\n    };\n\n    HdSmart.Device.getDeviceLog = function (data, onSuccess) {\n        HdIot.Device.getDeviceLog({\n            data: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n                method: 'getDeviceLog',\n                req_id: guid(),\n                params: {\n                    device_uuid: getDeviceUUID(),\n                    start_time: data.start_time,\n                    items_per_page: typeof data.items_per_page === 'number' ? data.items_per_page : 8,\n                    direction: data.direction\n                }\n            }),\n            onListener: function onListener(data) {\n                data = JSON.parse(data);\n                if (isFunction(onSuccess)) {\n                    onSuccess(data.result);\n                }\n            }\n        });\n    };\n\n    HdSmart.Device.getDeviceMonthHistory = function (date, onSuccess) {\n        HdIot.Device.getDeviceMonthHistory({\n            data: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n                method: 'getDeviceMonthHistory',\n                req_id: guid(),\n                params: {\n                    device_uuid: getDeviceUUID(),\n                    start_time: parseInt(date / 1000)\n                }\n            }),\n            onListener: function onListener(data) {\n                console.log(data);\n                data = JSON.parse(data);\n                if (isFunction(onSuccess)) {\n                    onSuccess(data);\n                }\n            }\n        });\n    };\n\n    HdSmart.Device.getSnapShot = function (onSuccess, onFailure) {\n        HdIot.Device.getSnapShot({\n            data: '',\n            onListener: function onListener(data) {\n                data = JSON.parse(data);\n                if (data.result) {\n                    onSuccess(data.result, data.timestamp || data.result.timestamp);\n                } else {\n                    onFailure(data);\n                }\n            }\n        });\n    };\n\n    HdSmart.UI = {};\n\n    HdSmart.UI.alert = function (title, message, onSuccess, okText, cancelText) {\n        okText = okText || '确定';\n        cancelText = cancelText || '取消';\n        HdIot.UI.alert({\n            data: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n                title: title,\n                message: message,\n                okText: okText,\n                cancelText: cancelText\n            }),\n            onListener: function onListener() {\n                onSuccess();\n            }\n        });\n    };\n\n    HdSmart.UI.toast = function (message, delay) {\n        delay = delay || 3000;\n        HdIot.UI.toast(message, delay);\n    };\n\n    HdSmart.UI.showLoading = function () {\n        HdIot.UI.showLoading({\n            data: ''\n        });\n    };\n\n    HdSmart.UI.hideLoading = function () {\n        HdIot.UI.hideLoading({\n            data: ''\n        });\n    };\n\n    HdSmart.Util = {};\n\n    HdSmart.Util.getNetworkType = function (onSuccess) {\n        HdIot.Util.getNetworkType(onSuccess);\n    };\n\n    HdSmart.Util.reload = function () {\n        HdIot.Util.reload();\n    };\n\n    HdSmart.Util.post = function (url, data, onSuccess, onFailure) {\n        HdIot.Util.post({\n            data: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n                url: url,\n                data: data\n            }),\n            onListener: function onListener(data) {\n                onSuccess(data);\n            }\n        });\n    };\n\n    HdSmart.Util.sendNotification = function (title, message) {\n        HdIot.Util.sendNotification({\n            data: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n                title: title,\n                message: message\n            })\n        });\n    };\n\n    var is_ready = false;\n    var readyCallbacks = [];\n    var deviceChangeCallbacks = [];\n    window.HdSmart = {\n        ready: function ready(callback) {\n            if (is_ready) {\n                callback();\n            } else {\n                readyCallbacks.push(callback);\n            }\n        },\n        onDeviceListen: function onDeviceListen(callback) {\n            deviceChangeCallbacks.push(callback);\n        }\n    };\n\n    window.onDeviceChange = function (data) {\n        var length = deviceChangeCallbacks.length;\n        for (var i = 0; i < length; i++) {\n            if (isFunction(deviceChangeCallbacks[i])) {\n                deviceChangeCallbacks[i](data);\n            }\n        }\n    };\n\n    window.onDeviceJsReady = function () {\n        if (!window.HdIot) {\n            throw new Error(\"当前环境没有可用的api\");\n        }\n        if (!is_ready) {\n            HdSmart.ready = window.HdSmart.ready;\n            HdSmart.onDeviceListen = window.HdSmart.onDeviceListen;\n            window.HdSmart = HdSmart;\n            is_ready = true;\n        }\n        while (readyCallbacks.length) {\n            var func = readyCallbacks.pop();\n            if (isFunction(func)) {\n                func();\n            }\n        }\n    };\n})(window);\n\n/***/ }),\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(0);\n(function webpackMissingModule() { throw new Error(\"Cannot find module \\\"./src/window/main.js\\\"\"); }());\n\n\n/***/ })\n],[4]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.43fbd8fc311998483f8c.js","(function (window, undefined) {\n    if (window.HdSmart) {\n        return false;\n    }\n    function isFunction(fun) {\n        return typeof fun === 'function'\n    }\n\n    function noop() {\n\n    }\n\n    function getDeviceUUID() {\n        return window.device_uuid;\n    }\n\n    function guid() {\n        var guid = 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 10 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n        guid = guid.replace(/^0/, '1');\n        return guid;\n    }\n\n    var HdSmart = {};\n\n\n    HdSmart.Device = {};\n\n    /**\n     * @method HdSmart.Device.control\n     * @param method\n     * @param command\n     * @param attr\n     * @param onSuccess\n     * @param onFailure\n     */\n    HdSmart.Device.control = function (method, command, attr, onSuccess, onFailure) {\n        HdIot.Device.control({\n            data: JSON.stringify({\n                method: method,\n                req_id: guid(),\n                params: {\n                    device_uuid: getDeviceUUID(),\n                    cmd: command,\n                    attr: attr\n                }\n            }),\n            onListener: function (data) {\n                onSuccess(data)\n            }\n        });\n    };\n\n    /**\n     * @method HdSmart.Device.getDeviceLog\n     * @param data\n     * @param data.start_time required\n     * @param data.items_per_page optional\n     * @param data.direction required\n     * @param onSuccess\n     */\n\n    HdSmart.Device.getDeviceLog = function (data, onSuccess) {\n        HdIot.Device.getDeviceLog({\n            data: JSON.stringify({\n                method: 'getDeviceLog',\n                req_id: guid(),\n                params: {\n                    device_uuid: getDeviceUUID(),\n                    start_time: data.start_time,\n                    items_per_page: typeof data.items_per_page === 'number' ? data.items_per_page : 8,\n                    direction: data.direction\n                }\n            }),\n            onListener: function (data) {\n                data = JSON.parse(data);\n                if (isFunction(onSuccess)) {\n                    onSuccess(data.result)\n                }\n            }\n        });\n    };\n\n\n    HdSmart.Device.getDeviceMonthHistory = function (date, onSuccess) {\n        HdIot.Device.getDeviceMonthHistory({\n            data: JSON.stringify({\n                method: 'getDeviceMonthHistory',\n                req_id: guid(),\n                params: {\n                    device_uuid: getDeviceUUID(),\n                    start_time: parseInt(date / 1000)\n                }\n            }),\n            onListener: function (data) {\n                console.log(data)\n                data = JSON.parse(data);\n                if (isFunction(onSuccess)) {\n                    onSuccess(data);\n                }\n            }\n        })\n    };\n\n    /**\n     * @method HdSmart.Device.getSnapShot\n     * @param onSuccess\n     * @param onFailure\n     */\n    HdSmart.Device.getSnapShot = function (onSuccess, onFailure) {\n        HdIot.Device.getSnapShot({\n            data: '',\n            onListener: function (data) {\n                data = JSON.parse(data);\n                if (data.result) {\n                    onSuccess(data.result,data.timestamp || data.result.timestamp);\n                } else {\n                    onFailure(data);\n                }\n            }\n        });\n    };\n\n    HdSmart.UI = {};\n    /**\n     * @method HdSmart.UI.alert\n     * @param title\n     * @param message\n     * @param onSuccess\n     * @param okText\n     * @param cancelText\n     */\n    HdSmart.UI.alert = function (title, message, onSuccess, okText, cancelText) {\n        okText = okText || '确定';\n        cancelText = cancelText || '取消';\n        HdIot.UI.alert({\n            data: JSON.stringify({\n                title: title,\n                message: message,\n                okText: okText,\n                cancelText: cancelText\n            }),\n            onListener: function () {\n                onSuccess()\n            }\n        });\n    };\n\n    /**\n     * @method HdSmart.UI.toast\n     * @param message\n     * @param delay\n     */\n    HdSmart.UI.toast = function (message, delay) {\n        delay = delay || 3000;\n        HdIot.UI.toast(message, delay);\n    };\n    /**\n     * @method HdSmart.UI.showLoading\n     */\n    HdSmart.UI.showLoading = function () {\n        HdIot.UI.showLoading({\n            data: ''\n        });\n    };\n\n    /**\n     * @method HdSmart.UI.hideLoading\n     */\n    HdSmart.UI.hideLoading = function () {\n        HdIot.UI.hideLoading({\n            data: ''\n        });\n    };\n\n    HdSmart.Util = {};\n\n    /**\n     * @method HdSmart.Util.getNetworkType\n     * @param onSuccess\n     */\n    HdSmart.Util.getNetworkType = function (onSuccess) {\n        HdIot.Util.getNetworkType(onSuccess);\n    };\n\n    /**\n     * @method HdSmart.Util.reload\n     */\n    HdSmart.Util.reload = function () {\n        HdIot.Util.reload();\n    };\n\n    /**\n     * @method HdSmart.Util.post\n     * @param url\n     * @param data\n     * @param onSuccess\n     * @param onFailure\n     */\n    HdSmart.Util.post = function (url, data, onSuccess, onFailure) {\n        HdIot.Util.post({\n            data: JSON.stringify({\n                url: url,\n                data: data\n            }),\n            onListener: function (data) {\n                onSuccess(data)\n            }\n        })\n    };\n\n    HdSmart.Util.sendNotification = function (title, message) {\n        HdIot.Util.sendNotification({\n            data: JSON.stringify({\n                title: title,\n                message: message\n            })\n        });\n    };\n    /**\n     * 设备控制页加载资源完成后调用\n     * @method HdSmart.ready\n     * @type {Window.onDeviceJsReady}\n     */\n    var is_ready = false;\n    var readyCallbacks = [];\n    var deviceChangeCallbacks = [];\n    window.HdSmart = {\n        ready: function (callback) {\n            if (is_ready) {\n                callback();\n            } else {\n                readyCallbacks.push(callback);\n            }\n        },\n        onDeviceListen: function (callback) {\n            deviceChangeCallbacks.push(callback);\n        }\n    };\n\n    window.onDeviceChange = function (data) {\n        var length = deviceChangeCallbacks.length;\n        for (var i = 0; i < length; i++) {\n            if (isFunction(deviceChangeCallbacks[i])) {\n                deviceChangeCallbacks[i](data);\n            }\n        }\n    };\n\n    window.onDeviceJsReady = function () {\n        if (!window.HdIot) {\n            throw new Error(\"当前环境没有可用的api\")\n        }\n        if (!is_ready) {\n            HdSmart.ready = window.HdSmart.ready;\n            HdSmart.onDeviceListen = window.HdSmart.onDeviceListen;\n            window.HdSmart = HdSmart;\n            is_ready = true;\n        }\n        while (readyCallbacks.length) {\n            var func = readyCallbacks.pop();\n            if (isFunction(func)) {\n                func();\n            }\n        }\n    };\n})(window);\n\n\n// WEBPACK FOOTER //\n// ./src/sdk/assets/hd.sdk.js"],"sourceRoot":""}